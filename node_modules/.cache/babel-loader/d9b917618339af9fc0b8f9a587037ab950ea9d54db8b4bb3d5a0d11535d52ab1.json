{"ast":null,"code":"async function serializeRequest(request) {\n  const requestClone = request.clone();\n  const requestText = await requestClone.text();\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText\n  };\n}\nexport { serializeRequest };","map":{"version":3,"mappings":"AAUA,eAAsBA,iBACpBC,SACwB;EACxB,MAAMC,eAAeD,QAAQE,MAAM;EACnC,MAAMC,cAAc,MAAMF,aAAaG,KAAK;EAE5C,OAAO;IACLC,KAAK,IAAIC,IAAIN,QAAQK,GAAG;IACxBE,QAAQP,QAAQO;IAChBC,SAASC,OAAOC,YAAYV,QAAQQ,QAAQG,QAAQ,CAAC;IACrDC,MAAMT;EACR;AACF","names":["serializeRequest","request","requestClone","clone","requestText","text","url","URL","method","headers","Object","fromEntries","entries","body"],"sources":["/Users/ditole/Desktop/projects/pets-store/node_modules/msw/src/core/utils/logging/serializeRequest.ts"],"sourcesContent":["export interface LoggedRequest {\n  url: URL\n  method: string\n  headers: Record<string, string>\n  body: string\n}\n\n/**\n * Formats a mocked request for introspection in browser's console.\n */\nexport async function serializeRequest(\n  request: Request,\n): Promise<LoggedRequest> {\n  const requestClone = request.clone()\n  const requestText = await requestClone.text()\n\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText,\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}