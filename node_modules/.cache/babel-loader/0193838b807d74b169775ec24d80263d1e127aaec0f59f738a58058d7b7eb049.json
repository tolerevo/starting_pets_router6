{"ast":null,"code":"import { executeHandlers } from './utils/executeHandlers.mjs';\nimport { randomId } from './utils/internal/randomId.mjs';\nconst getResponse = async (handlers, request) => {\n  const result = await executeHandlers({\n    request,\n    requestId: randomId(),\n    handlers\n  });\n  return result?.response;\n};\nexport { getResponse };","map":{"version":3,"mappings":"AACA,SAASA,uBAAuB;AAChC,SAASC,gBAAgB;AASlB,MAAMC,cAAc,OACzBC,UACAC,YACkC;EAClC,MAAMC,SAAS,MAAML,gBAAgB;IACnCI;IACAE,WAAWL,SAAS;IACpBE;EACF,CAAC;EAED,OAAOE,QAAQE;AACjB","names":["executeHandlers","randomId","getResponse","handlers","request","result","requestId","response"],"sources":["/Users/ditole/Desktop/projects/pets-store/node_modules/msw/src/core/getResponse.ts"],"sourcesContent":["import type { RequestHandler } from './handlers/RequestHandler'\nimport { executeHandlers } from './utils/executeHandlers'\nimport { randomId } from './utils/internal/randomId'\n\n/**\n * Finds a response for the given request instance\n * in the array of request handlers.\n * @param handlers The array of request handlers.\n * @param request The `Request` instance.\n * @returns {Response} A mocked response, if any.\n */\nexport const getResponse = async (\n  handlers: Array<RequestHandler>,\n  request: Request,\n): Promise<Response | undefined> => {\n  const result = await executeHandlers({\n    request,\n    requestId: randomId(),\n    handlers,\n  })\n\n  return result?.response\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}