{"ast":null,"code":"import { format } from \"outvariant\";\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message) {\n  for (var _len = arguments.length, positionals = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    positionals[_key - 1] = arguments[_key];\n  }\n  const interpolatedMessage = format(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message) {\n  for (var _len2 = arguments.length, positionals = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    positionals[_key2 - 1] = arguments[_key2];\n  }\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message) {\n  for (var _len3 = arguments.length, positionals = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    positionals[_key3 - 1] = arguments[_key3];\n  }\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\nexport { devUtils };","map":{"version":3,"mappings":"AAAA,SAASA,cAAc;AAEvB,MAAMC,iBAAiB;AAKvB,SAASC,cAAcC,SAAgD;EAAA,kCAA5BC;IAAAA;EAAA;EACzC,MAAMC,sBAAsBL,OAAOG,SAAS,GAAGC,WAAW;EAC1D,OAAO,GAAGH,cAAc,IAAII,mBAAmB;AACjD;AAKA,SAASC,KAAKH,SAA8C;EAAA,mCAA1BC;IAAAA;EAAA;EAChCG,QAAQD,KAAKJ,cAAcC,SAAS,GAAGC,WAAW,CAAC;AACrD;AAKA,SAASI,MAAML,SAA8C;EAAA,mCAA1BC;IAAAA;EAAA;EACjCG,QAAQC,MAAMN,cAAcC,SAAS,GAAGC,WAAW,CAAC;AACtD;AAEO,MAAMK,WAAW;EACtBP;EACAI;EACAE;AACF","names":["format","LIBRARY_PREFIX","formatMessage","message","positionals","interpolatedMessage","warn","console","error","devUtils"],"sources":["/Users/ditole/Desktop/projects/pets-store/node_modules/msw/src/core/utils/internal/devUtils.ts"],"sourcesContent":["import { format } from 'outvariant'\n\nconst LIBRARY_PREFIX = '[MSW]'\n\n/**\n * Formats a given message by appending the library's prefix string.\n */\nfunction formatMessage(message: string, ...positionals: any[]): string {\n  const interpolatedMessage = format(message, ...positionals)\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`\n}\n\n/**\n * Prints a library-specific warning.\n */\nfunction warn(message: string, ...positionals: any[]): void {\n  console.warn(formatMessage(message, ...positionals))\n}\n\n/**\n * Prints a library-specific error.\n */\nfunction error(message: string, ...positionals: any[]): void {\n  console.error(formatMessage(message, ...positionals))\n}\n\nexport const devUtils = {\n  formatMessage,\n  warn,\n  error,\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}