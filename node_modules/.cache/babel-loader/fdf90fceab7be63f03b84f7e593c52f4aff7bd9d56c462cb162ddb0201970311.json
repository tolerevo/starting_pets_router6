{"ast":null,"code":"function pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\nexport { pipeEvents };","map":{"version":3,"mappings":"AAKO,SAASA,WACdC,QACAC,aACM;EACN,MAAMC,UAAuDF,OAAOG;EAEpE,IAAID,QAAQE,UAAU;IACpB;EACF;EAEA,MAAMC,aACJ,SAASA,YAAgCC,OAAgB;IAAA,kCAANC;MAAAA;IAAA;IACjDN,YAAYE,KAAKG,OAAO,GAAGC,IAAI;IAC/B,OAAOL,QAAQM,KAAK,MAAMF,OAAO,GAAGC,IAAI;EAC1C;EAEFF,WAAWD,WAAW;EAEtBJ,OAAOG,OAAOE;AAChB","names":["pipeEvents","source","destination","rawEmit","emit","_isPiped","sourceEmit","event","data","call"],"sources":["/Users/ditole/Desktop/projects/pets-store/node_modules/msw/src/core/utils/internal/pipeEvents.ts"],"sourcesContent":["import { Emitter, EventMap } from 'strict-event-emitter'\n\n/**\n * Pipes all emitted events from one emitter to another.\n */\nexport function pipeEvents<Events extends EventMap>(\n  source: Emitter<Events>,\n  destination: Emitter<Events>,\n): void {\n  const rawEmit: typeof source.emit & { _isPiped?: boolean } = source.emit\n\n  if (rawEmit._isPiped) {\n    return\n  }\n\n  const sourceEmit: typeof source.emit & { _isPiped?: boolean } =\n    function sourceEmit(this: typeof source, event, ...data) {\n      destination.emit(event, ...data)\n      return rawEmit.call(this, event, ...data)\n    }\n\n  sourceEmit._isPiped = true\n\n  source.emit = sourceEmit\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}